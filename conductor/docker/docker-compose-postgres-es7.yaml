version: '2.3'

services:
  conductor-server:
    environment:
      - CONFIG_PROP=config-postgres-es7.properties
    image: r0drigo/conductor-oss:3.21.12
    container_name: conductor_server
    networks:
      - internal
    ports:
      - 8080:8080
      - 8127:5000
    volumes:
      - ../config:/app/config
    healthcheck:
      test: [ "CMD", "curl","-I" ,"-XGET", "http://localhost:8080/health" ]
      interval: 60s
      timeout: 30s
      retries: 12
    links:
      - conductor-postgres:postgresdb
      - conductor-elasticsearch:es
      - rabbitmq:rabbitmq
      - reservation-service:reservation-service
    depends_on:
      conductor-postgres:
        condition: service_healthy
      conductor-elasticsearch:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"

  conductor-postgres:
    image: postgres
    environment:
      - POSTGRES_USER=conductor
      - POSTGRES_PASSWORD=conductor
    volumes:
      - pgdata-conductor:/var/lib/postgresql/data
    networks:
      - internal
    ports:
      - 6432:5432
    healthcheck:
      test: timeout 5 bash -c 'cat < /dev/null > /dev/tcp/localhost/5432'
      interval: 5s
      timeout: 5s
      retries: 12
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"

  conductor-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.11
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx1024m"
      - xpack.security.enabled=false
      - discovery.type=single-node
    volumes:
      - esdata-conductor:/usr/share/elasticsearch/data
    networks:
      - internal
    ports:
      - 9201:9200
    healthcheck:
      test: curl http://localhost:9200/_cluster/health -o /dev/null
      interval: 5s
      timeout: 5s
      retries: 12
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    networks:
      - internal
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  reservation-service:
    image:  r0drigo/reservation-api
    container_name: reservation-service
    networks:
      - internal
    ports:
      - "8081:8080"

  payment-service:
    image: r0drigo/payment-api
    container_name: payment-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
    networks:
      - internal

volumes:
  pgdata-conductor:
    driver: local
  esdata-conductor:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  internal:
