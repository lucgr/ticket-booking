volumes:
  mongo_data:

networks:
  group8_network:

services:
  reservationAPI:
    container_name: reservationAPI
    image: group8/reservation_api
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - mongo
    ports:
      - "8080:8080"
    networks:
      - group8_network

  mongo:
    container_name: mongo
    image: mongo:8
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27017" ]
    ports:
      - "27017:27017"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - "mongo_data:/data/db"
    networks:
      - group8_network
